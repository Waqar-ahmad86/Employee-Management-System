@using EMSMvc.Core.Application.DTOs
@model AdminCreate
@{
    ViewData["Title"] = "Create New User";
}

<h2 class="mb-3 fw-bold">Create New User</h2>

<hr />
<partial name="_StatusMessages" />

<div class="row">
    <div class="col-md-8">
        <form asp-action="CreateUser" method="post">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="FullName" class="form-label"></label>
                    <input asp-for="FullName" class="form-control" />
                    <span asp-validation-for="FullName" class="text-danger"></span>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="UserName" class="form-label"></label>
                    <input asp-for="UserName" class="form-control" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="Email" class="form-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Password" class="form-label"></label>
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="ConfirmPassword" class="form-label"></label>
                    <input asp-for="ConfirmPassword" class="form-control" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label fw-bold">Assign Role:</label>
                @if (Model.AllRoles != null && Model.AllRoles.Any())
                {
                    var firstRoleValue = Model.AllRoles.FirstOrDefault()?.Value;
                    bool isAnyRoleSelected = Model.SelectedRoles != null && Model.SelectedRoles.Any();

                    @foreach (var roleItem in Model.AllRoles)
                    {
                        <div class="form-check">
                            <input type="radio" name="SelectedRoles" value="@roleItem.Value"
                                   class="form-check-input" id="role-@roleItem.Value"
                            @(Model.SelectedRoles != null && Model.SelectedRoles.Contains(roleItem.Value) ? "checked" : !isAnyRoleSelected && roleItem.Value == "User" ? "checked" : "") />
                            <label class="form-check-label" for="role-@roleItem.Value">@roleItem.Text</label>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">No roles available to assign.</p>
                }
                <span asp-validation-for="SelectedRoles" class="text-danger"></span>
            </div>

            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" asp-for="IsActive">
                <label class="form-check-label" asp-for="IsActive"></label>
            </div>

            <button type="submit" class="btn btn-success">Create User</button>
            <a asp-action="Index" class="btn btn-secondary">Cancel</a>
        </form>
    </div>
</div>